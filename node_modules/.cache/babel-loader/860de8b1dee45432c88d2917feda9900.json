{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jogos\\\\Desktop\\\\api-post\\\\frontend\\\\src\\\\pages\\\\Dashboard\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Menu from \"../../components/Menu\";\nimport { useAuth } from \"../../hooks/AuthContext\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport * as S from \"./styled\";\nimport api from \"../../services/api\";\nimport { useEffect } from \"react\";\nimport CardShowContainer from \"../../components/CardPostShow\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DashBoard = () => {\n  _s();\n\n  const {\n    params\n  } = useRouteMatch();\n  const {\n    user: userAuth\n  } = useAuth();\n  const [post, setPost] = useState([]);\n  const [comments, setComments] = useState([]);\n  useEffect(() => {\n    api.get(`/post/v1/${params[\"id\"]}`).then(response => setPost(response.data)).catch(err => console.log(err));\n  }, []);\n  useEffect(() => {\n    api.get(`/comments/post_comments/${params[\"id\"]}`).then(response => setComments(response.data)).catch(e => console.log(e));\n  }, []); //@ts-ignore\n\n  console.log(post);\n  return /*#__PURE__*/_jsxDEV(S.Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Menu, {\n      userName: userAuth.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardShowContainer //@ts-ignore\n    , {\n      //@ts-ignore\n      text_post: post.post_text //@ts-ignore\n      //@ts-ignore\n\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n/* {post.map((intem, index) => (\n        <CardShowContainer\n          key={index}\n          //@ts-ignore\n          text_post={post.post_text}\n          //@ts-ignore\n          profile_image={user.avatar}\n          //@ts-ignore\n          nickName={user.nickname}\n          //@ts-ignore\n          name={user.name}\n        />\n      ))}{\" \"} */\n\n\n_s(DashBoard, \"ZNaX8+vUKUS6wLAoJESBPkFeUDc=\", false, function () {\n  return [useRouteMatch, useAuth];\n});\n\n_c = DashBoard;\nexport default DashBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"DashBoard\");","map":{"version":3,"sources":["C:/Users/jogos/Desktop/api-post/frontend/src/pages/Dashboard/index.tsx"],"names":["React","useState","Menu","useAuth","useRouteMatch","S","api","useEffect","CardShowContainer","DashBoard","params","user","userAuth","post","setPost","comments","setComments","get","then","response","data","catch","err","console","log","e","name","post_text","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAA6BC,QAA7B,QAA6C,OAA7C;AAGA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,SAASC,OAAT,QAAsC,yBAAtC;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,OAAO,KAAKC,CAAZ,MAAmB,UAAnB;AAEA,OAAOC,GAAP,MAAgB,oBAAhB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,iBAAP,MAA8B,+BAA9B;;;AAcA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM;AAAEC,IAAAA;AAAF,MAAaN,aAAa,EAAhC;AACA,QAAM;AAAEO,IAAAA,IAAI,EAAEC;AAAR,MAAqBT,OAAO,EAAlC;AAEA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAe,EAAf,CAAhC;AACA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,EAAD,CAAxC;AAEAM,EAAAA,SAAS,CAAC,MAAM;AACdD,IAAAA,GAAG,CACAW,GADH,CACQ,YAAWP,MAAM,CAAC,IAAD,CAAO,EADhC,EAEGQ,IAFH,CAESC,QAAD,IAAcL,OAAO,CAACK,QAAQ,CAACC,IAAV,CAF7B,EAGGC,KAHH,CAGUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAHlB;AAID,GALQ,EAKN,EALM,CAAT;AAOAf,EAAAA,SAAS,CAAC,MAAM;AACdD,IAAAA,GAAG,CACAW,GADH,CACQ,2BAA0BP,MAAM,CAAC,IAAD,CAAO,EAD/C,EAEGQ,IAFH,CAESC,QAAD,IAAcH,WAAW,CAACG,QAAQ,CAACC,IAAV,CAFjC,EAGGC,KAHH,CAGUI,CAAD,IAAOF,OAAO,CAACC,GAAR,CAAYC,CAAZ,CAHhB;AAID,GALQ,EAKN,EALM,CAAT,CAdsB,CAoBtB;;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAYX,IAAZ;AAEA,sBACE,QAAC,CAAD,CAAG,OAAH;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAED,QAAQ,CAACc;AAAzB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,iBAAD,CACE;AADF;AAGE;AACA,MAAA,SAAS,EAAEb,IAAI,CAACc,SAJlB,CAME;AAEA;;AARF,OAEOd,IAAI,CAACe,EAFZ;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAtCD;AAwCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;GApDMnB,S;UACeL,a,EACQD,O;;;KAFvBM,S;AAsDN,eAAeA,SAAf","sourcesContent":["import React, { useCallback, useState } from \"react\";\nimport CardPost from \"../../components/CardPost\";\nimport logo from \"../../assets/profile.jpg\";\nimport Menu from \"../../components/Menu\";\nimport { useAuth, AuthProvider } from \"../../hooks/AuthContext\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport * as S from \"./styled\";\nimport { Container } from \"../../components/Container\";\nimport api from \"../../services/api\";\nimport { useEffect } from \"react\";\nimport CardShowContainer from \"../../components/CardPostShow\";\n\ntype PostsProps = {\n  id: string;\n  id_user: string;\n  post_text: string;\n  user: {\n    id: string;\n    avatar: string;\n    name: string;\n    nickname: string;\n  };\n};\n\nconst DashBoard = () => {\n  const { params } = useRouteMatch();\n  const { user: userAuth } = useAuth();\n\n  const [post, setPost] = useState<PostsProps[]>([]);\n  const [comments, setComments] = useState([]);\n\n  useEffect(() => {\n    api\n      .get(`/post/v1/${params[\"id\"]}`)\n      .then((response) => setPost(response.data))\n      .catch((err) => console.log(err));\n  }, []);\n\n  useEffect(() => {\n    api\n      .get(`/comments/post_comments/${params[\"id\"]}`)\n      .then((response) => setComments(response.data))\n      .catch((e) => console.log(e));\n  }, []);\n  //@ts-ignore\n  console.log(post);\n\n  return (\n    <S.Wrapper>\n      <Menu userName={userAuth.name} />\n      <CardShowContainer\n        //@ts-ignore\n        key={post.id}\n        //@ts-ignore\n        text_post={post.post_text}\n\n        //@ts-ignore\n\n        //@ts-ignore\n      />\n    </S.Wrapper>\n  );\n};\n\n/* {post.map((intem, index) => (\n        <CardShowContainer\n          key={index}\n          //@ts-ignore\n          text_post={post.post_text}\n          //@ts-ignore\n          profile_image={user.avatar}\n          //@ts-ignore\n          nickName={user.nickname}\n          //@ts-ignore\n          name={user.name}\n        />\n      ))}{\" \"} */\n\nexport default DashBoard;\n"]},"metadata":{},"sourceType":"module"}
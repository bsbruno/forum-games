{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jogos\\\\Desktop\\\\api-post\\\\frontend\\\\src\\\\pages\\\\ForgotPassword\\\\index.tsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable @typescript-eslint/ban-types */\n\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport React, { useCallback, useRef, useState } from \"react\";\nimport Logo from \"../../components/Logo\";\nimport Button from \"../../components/Button\";\nimport Input from \"../../components/Input\";\nimport { FiMail } from \"react-icons/fi\";\nimport { Form } from \"@unform/web\";\nimport * as S from \"./stlyed\";\nimport * as Yup from \"yup\";\nimport getValidationErros from \"../../utils/getValidationErros\";\nimport api from \"../../services/api\";\nimport Loading from \"../../components/Loading\";\nimport Toast from \"../../components/Toast\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ForgotPassword = () => {\n  _s();\n\n  const formRef = useRef(null);\n  const [loading, setLoading] = useState(false);\n  const handleSubmit = useCallback(async data => {\n    try {\n      var _formRef$current;\n\n      setLoading(true);\n      (_formRef$current = formRef.current) === null || _formRef$current === void 0 ? void 0 : _formRef$current.setErrors({});\n      const schema = Yup.object().shape({\n        email: Yup.string().required(\"Email Obrigatorio\").email(\"Digite um E-mail valido\")\n      });\n      await schema.validate(data, {\n        abortEarly: false\n      });\n      await api.post(\"/password/forgot\", { ...data\n      });\n    } catch (err) {\n      if (err instanceof Yup.ValidationError) {\n        var _formRef$current2;\n\n        const errors = getValidationErros(err);\n        (_formRef$current2 = formRef.current) === null || _formRef$current2 === void 0 ? void 0 : _formRef$current2.setErrors(errors);\n      }\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(S.Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(S.Background, {\n      children: /*#__PURE__*/_jsxDEV(S.BackgroundText, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Lorem \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"standard dummy text ever\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 32\n          }, this), \" since the 1500s, when an unknown printer took a galley of type and scrambled\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(S.Content, {\n      children: [loading === false && /*#__PURE__*/_jsxDEV(Toast, {\n        message: \" Enviamos um email para voce\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(Logo, {\n        size: \"large\",\n        hiddenText: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        ref: formRef,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Recupera\\xE7\\xE3o de Senha \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          name: \"email\",\n          icon: FiMail,\n          type: \"email\",\n          placeholder: \"E-mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), loading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Button, {\n          color: \"secondary\",\n          type: \"submit\",\n          children: \"Recupera Senha\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ForgotPassword, \"fgxkU/nlF71kf3OLgWNitcT7sXg=\");\n\n_c = ForgotPassword;\nexport default ForgotPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"sources":["C:/Users/jogos/Desktop/api-post/frontend/src/pages/ForgotPassword/index.tsx"],"names":["React","useCallback","useRef","useState","Logo","Button","Input","FiMail","Form","S","Yup","getValidationErros","api","Loading","Toast","ForgotPassword","formRef","loading","setLoading","handleSubmit","data","current","setErrors","schema","object","shape","email","string","required","validate","abortEarly","post","err","ValidationError","errors"],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport React, { useCallback, useRef, useState } from \"react\";\nimport Logo from \"../../components/Logo\";\nimport { FormHandles } from \"@unform/core\";\nimport Button from \"../../components/Button\";\nimport Input from \"../../components/Input\";\nimport { FiMail } from \"react-icons/fi\";\nimport { Form } from \"@unform/web\";\nimport * as S from \"./stlyed\";\nimport * as Yup from \"yup\";\nimport getValidationErros from \"../../utils/getValidationErros\";\nimport api from \"../../services/api\";\nimport Loading from \"../../components/Loading\";\nimport Toast from \"../../components/Toast\";\n\ntype SignUpFormData = {\n  email: string;\n};\n\nconst ForgotPassword = () => {\n  const formRef = useRef<FormHandles>(null);\n  const [loading, setLoading] = useState(false);\n\n  const handleSubmit = useCallback(async (data: SignUpFormData) => {\n    try {\n      setLoading(true);\n      formRef.current?.setErrors({});\n      const schema = Yup.object().shape({\n        email: Yup.string()\n          .required(\"Email Obrigatorio\")\n          .email(\"Digite um E-mail valido\"),\n      });\n      await schema.validate(data, {\n        abortEarly: false,\n      });\n\n      await api.post(\"/password/forgot\", { ...data });\n    } catch (err) {\n      if (err instanceof Yup.ValidationError) {\n        const errors = getValidationErros(err);\n        formRef.current?.setErrors(errors);\n      }\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  return (\n    <S.Wrapper>\n      <S.Background>\n        <S.BackgroundText>\n          <h1>Lorem </h1>\n          <p>\n            is simply dummy text of the printing and typesetting industry. Lorem\n            Ipsum has been the <strong>standard dummy text ever</strong> since\n            the 1500s, when an unknown printer took a galley of type and\n            scrambled\n          </p>\n        </S.BackgroundText>\n      </S.Background>\n      <S.Content>\n        {loading === false && <Toast message=\" Enviamos um email para voce\" />}\n\n        <Logo size=\"large\" hiddenText={true} />\n        <Form ref={formRef} onSubmit={handleSubmit}>\n          <h2>Recuperação de Senha </h2>\n\n          <Input name=\"email\" icon={FiMail} type=\"email\" placeholder=\"E-mail\" />\n\n          {loading ? (\n            <Loading />\n          ) : (\n            <Button color=\"secondary\" type=\"submit\">\n              Recupera Senha\n            </Button>\n          )}\n        </Form>\n      </S.Content>\n    </S.Wrapper>\n  );\n};\n\nexport default ForgotPassword;\n"]},"metadata":{},"sourceType":"module"}
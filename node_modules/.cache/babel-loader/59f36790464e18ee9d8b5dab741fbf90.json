{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jogos\\\\Desktop\\\\api-post\\\\frontend\\\\src\\\\pages\\\\Dashboard\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Menu from \"../../components/Menu\";\nimport { useAuth } from \"../../hooks/AuthContext\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport * as S from \"./styled\";\nimport { Container } from \"../../components/Container\";\nimport api from \"../../services/api\";\nimport { useEffect } from \"react\";\nimport CardShowContainer from \"../../components/CardPostShow\";\nimport CardComments from \"../../components/CardComments\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DashBoard = () => {\n  _s();\n\n  var _post$user, _post$user2, _post$user3;\n\n  const {\n    params\n  } = useRouteMatch();\n  const {\n    user: userAuth\n  } = useAuth();\n  const [post, setPost] = useState({});\n  const [comments, setComments] = useState([]);\n  useEffect(() => {\n    api.get(`/post/v1/${params[\"id\"]}`).then(response => setPost(response.data)).catch(err => console.log(err));\n  }, []);\n  useEffect(() => {\n    api.get(`/comments/post_comments/${params[\"id\"]}`).then(response => setComments(response.data)).catch(e => console.log(e));\n  }, []);\n  console.log(post);\n  return /*#__PURE__*/_jsxDEV(S.Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Menu, {\n      userName: userAuth.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(S.Content, {\n        children: [post && /*#__PURE__*/_jsxDEV(CardShowContainer, {\n          text_post: post.post_text,\n          name: (_post$user = post.user) === null || _post$user === void 0 ? void 0 : _post$user.name,\n          nickName: (_post$user2 = post.user) === null || _post$user2 === void 0 ? void 0 : _post$user2.nickname,\n          profile_image: (_post$user3 = post.user) === null || _post$user3 === void 0 ? void 0 : _post$user3.avatar\n        }, post.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), comments.map((intem, index) => /*#__PURE__*/_jsxDEV(CardComments, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DashBoard, \"yvxUmB8z7TKfO8IRuobrU3Sqdis=\", false, function () {\n  return [useRouteMatch, useAuth];\n});\n\n_c = DashBoard;\nexport default DashBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"DashBoard\");","map":{"version":3,"sources":["C:/Users/jogos/Desktop/api-post/frontend/src/pages/Dashboard/index.tsx"],"names":["React","useState","Menu","useAuth","useRouteMatch","S","Container","api","useEffect","CardShowContainer","CardComments","DashBoard","params","user","userAuth","post","setPost","comments","setComments","get","then","response","data","catch","err","console","log","e","name","post_text","nickname","avatar","id","map","intem","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAA6BC,QAA7B,QAA6C,OAA7C;AAEA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,SAASC,OAAT,QAAsC,yBAAtC;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,OAAO,KAAKC,CAAZ,MAAmB,UAAnB;AACA,SAASC,SAAT,QAA0B,4BAA1B;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,iBAAP,MAA8B,+BAA9B;AACA,OAAOC,YAAP,MAAyB,+BAAzB;;;AAyBA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAAA;;AACtB,QAAM;AAAEC,IAAAA;AAAF,MAAaR,aAAa,EAAhC;AACA,QAAM;AAAES,IAAAA,IAAI,EAAEC;AAAR,MAAqBX,OAAO,EAAlC;AAEA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACgB,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,CAAkB,EAAlB,CAAxC;AAEAO,EAAAA,SAAS,CAAC,MAAM;AACdD,IAAAA,GAAG,CACAY,GADH,CACQ,YAAWP,MAAM,CAAC,IAAD,CAAO,EADhC,EAEGQ,IAFH,CAESC,QAAD,IAAcL,OAAO,CAACK,QAAQ,CAACC,IAAV,CAF7B,EAGGC,KAHH,CAGUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAHlB;AAID,GALQ,EAKN,EALM,CAAT;AAOAhB,EAAAA,SAAS,CAAC,MAAM;AACdD,IAAAA,GAAG,CACAY,GADH,CACQ,2BAA0BP,MAAM,CAAC,IAAD,CAAO,EAD/C,EAEGQ,IAFH,CAESC,QAAD,IAAcH,WAAW,CAACG,QAAQ,CAACC,IAAV,CAFjC,EAGGC,KAHH,CAGUI,CAAD,IAAOF,OAAO,CAACC,GAAR,CAAYC,CAAZ,CAHhB;AAID,GALQ,EAKN,EALM,CAAT;AAOAF,EAAAA,OAAO,CAACC,GAAR,CAAYX,IAAZ;AAEA,sBACE,QAAC,CAAD,CAAG,OAAH;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAED,QAAQ,CAACc;AAAzB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAA,6BACE,QAAC,CAAD,CAAG,OAAH;AAAA,mBACGb,IAAI,iBACH,QAAC,iBAAD;AAEE,UAAA,SAAS,EAAEA,IAAI,CAACc,SAFlB;AAGE,UAAA,IAAI,gBAAEd,IAAI,CAACF,IAAP,+CAAE,WAAWe,IAHnB;AAIE,UAAA,QAAQ,iBAAEb,IAAI,CAACF,IAAP,gDAAE,YAAWiB,QAJvB;AAKE,UAAA,aAAa,iBAAEf,IAAI,CAACF,IAAP,gDAAE,YAAWkB;AAL5B,WACOhB,IAAI,CAACiB,EADZ;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAUGf,QAAQ,CAACgB,GAAT,CAAa,CAACC,KAAD,EAAQC,KAAR,kBACZ,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,gBADD,CAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CA5CD;;GAAMxB,S;UACeP,a,EACQD,O;;;KAFvBQ,S;AA8CN,eAAeA,SAAf","sourcesContent":["import React, { useCallback, useState } from \"react\";\n\nimport Menu from \"../../components/Menu\";\nimport { useAuth, AuthProvider } from \"../../hooks/AuthContext\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport * as S from \"./styled\";\nimport { Container } from \"../../components/Container\";\nimport api from \"../../services/api\";\nimport { useEffect } from \"react\";\nimport CardShowContainer from \"../../components/CardPostShow\";\nimport CardComments from \"../../components/CardComments\";\n\ntype PostsProps = {\n  id: string;\n  id_user: string;\n  post_text: string;\n  user: {\n    id: string;\n    avatar?: string;\n    name?: string;\n    nickname?: string;\n  };\n};\ntype CommentsProps = {\n  id: string;\n  text_comments: string;\n\n  user: {\n    id: string;\n    avatar?: string;\n    name?: string;\n    nickname?: string;\n  };\n};\n\nconst DashBoard = () => {\n  const { params } = useRouteMatch();\n  const { user: userAuth } = useAuth();\n\n  const [post, setPost] = useState({} as PostsProps);\n  const [comments, setComments] = useState<CommentsProps[]>([]);\n\n  useEffect(() => {\n    api\n      .get(`/post/v1/${params[\"id\"]}`)\n      .then((response) => setPost(response.data))\n      .catch((err) => console.log(err));\n  }, []);\n\n  useEffect(() => {\n    api\n      .get(`/comments/post_comments/${params[\"id\"]}`)\n      .then((response) => setComments(response.data))\n      .catch((e) => console.log(e));\n  }, []);\n\n  console.log(post);\n\n  return (\n    <S.Wrapper>\n      <Menu userName={userAuth.name} />\n      <Container>\n        <S.Content>\n          {post && (\n            <CardShowContainer\n              key={post.id}\n              text_post={post.post_text}\n              name={post.user?.name}\n              nickName={post.user?.nickname}\n              profile_image={post.user?.avatar}\n            />\n          )}\n          {comments.map((intem, index) => (\n            <CardComments />\n          ))}\n        </S.Content>\n      </Container>\n    </S.Wrapper>\n  );\n};\n\nexport default DashBoard;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from\"C:/Users/jogos/Desktop/forum-game/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import*as S from\"./styled\";import Button from\"../Button\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var Toast=function Toast(_ref){var message=_ref.message;var _useState=useState(true),_useState2=_slicedToArray(_useState,2),open=_useState2[0],setOpen=_useState2[1];console.log(open);return/*#__PURE__*/_jsx(S.Wrapper,{open:open,children:/*#__PURE__*/_jsxs(S.Modal,{children:[/*#__PURE__*/_jsx(S.ContentModal,{children:/*#__PURE__*/_jsxs(\"p\",{children:[\" \",message,\" \"]})}),/*#__PURE__*/_jsx(S.CloseModal,{onClick:function onClick(){return setOpen(!open);},children:/*#__PURE__*/_jsx(Button,{children:\"Fechar\"})})]})});};export default Toast;","map":{"version":3,"sources":["C:/Users/jogos/Desktop/forum-game/frontend/src/components/Toast/index.tsx"],"names":["React","useState","S","Button","Toast","message","open","setOpen","console","log"],"mappings":"iKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAO,GAAKC,CAAAA,CAAZ,KAAmB,UAAnB,CAEA,MAAOC,CAAAA,MAAP,KAAmB,WAAnB,C,wFAMA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,MAA6B,IAA1BC,CAAAA,OAA0B,MAA1BA,OAA0B,eACjBJ,QAAQ,CAAC,IAAD,CADS,wCAClCK,IADkC,eAC5BC,OAD4B,eAEzCC,OAAO,CAACC,GAAR,CAAYH,IAAZ,EACA,mBACE,KAAC,CAAD,CAAG,OAAH,EAAW,IAAI,CAAEA,IAAjB,uBACE,MAAC,CAAD,CAAG,KAAH,yBACE,KAAC,CAAD,CAAG,YAAH,wBACE,yBAAKD,OAAL,OADF,EADF,cAIE,KAAC,CAAD,CAAG,UAAH,EAAc,OAAO,CAAE,yBAAME,CAAAA,OAAO,CAAC,CAACD,IAAF,CAAb,EAAvB,uBACE,KAAC,MAAD,qBADF,EAJF,GADF,EADF,CAYD,CAfD,CAiBA,cAAeF,CAAAA,KAAf","sourcesContent":["import React, { useState } from \"react\";\nimport * as S from \"./styled\";\n\nimport Button from \"../Button\";\n\nexport type ToastProps = {\n  message: string;\n};\n\nconst Toast = ({ message }: ToastProps) => {\n  const [open, setOpen] = useState(true);\n  console.log(open);\n  return (\n    <S.Wrapper open={open}>\n      <S.Modal>\n        <S.ContentModal>\n          <p> {message} </p>\n        </S.ContentModal>\n        <S.CloseModal onClick={() => setOpen(!open)}>\n          <Button>Fechar</Button>\n        </S.CloseModal>\n      </S.Modal>\n    </S.Wrapper>\n  );\n};\n\nexport default Toast;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jogos\\\\Desktop\\\\api-post\\\\frontend\\\\src\\\\pages\\\\Edit\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from \"react\";\nimport api from \"../../services/api\";\nimport * as S from \"./styled\";\nimport { useAuth } from \"../../hooks/AuthContext\";\nimport { Container } from \"../../components/Container\";\nimport Input from \"../../components/Input\";\nimport Button from \"../../components/Button\";\nimport { Form } from \"@unform/web\";\nimport Menu from \"../../components/Menu\";\nimport { useHistory } from \"react-router-dom\";\nimport { FiCamera } from \"react-icons/fi\";\nimport { useCallback } from \"react\";\nimport * as Yup from \"yup\";\nimport getValidationErros from \"../../utils/getValidationErros\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Edit = () => {\n  _s();\n\n  const {\n    user,\n    updateUser\n  } = useAuth();\n  const formRef = useRef(null);\n  const history = useHistory();\n  const handleAvatarChange = useCallback(async e => {\n    const data = new FormData();\n    data.append(\"avatar\", e.target.files[0]);\n    const {\n      data: userPhoto\n    } = await api.post(\"users/avatar\", data);\n    updateUser(userPhoto);\n  }, [updateUser]);\n  /*\n    api\n        .put(\"users/avatar\", data)\n        .then((response) => {\n          updateUser(response.data);\n        })\n        .catch((e) => console.log(e));\n  */\n\n  const handleSubmit = useCallback(async data => {\n    try {\n      const schema = Yup.object().shape({\n        name: Yup.string().required(\"Nome Obrigatorio\"),\n        nickname: Yup.string().required(\"Apelido Obrigatorio\"),\n        email: Yup.string().required().email(\"Digite um E-mail Valido\"),\n        old_password: Yup.string(),\n        password: Yup.string().when(\"old_password\", {\n          is: val => !!val.length,\n          then: Yup.string().required(\"Campo Obrigatorio\"),\n          otherwise: Yup.string()\n        }),\n        password_confirmation: Yup.string().when(\"old_password\", {\n          is: val => !!val.length,\n          then: Yup.string().required(\"Campo Obrigatorio\"),\n          otherwise: Yup.string()\n        }).oneOf([Yup.ref(\"password\"), null], \"Senhas est√£o diferentes\")\n      });\n      await schema.validate(data, {\n        abortEarly: false\n      });\n      const {\n        name,\n        email,\n        password,\n        old_password,\n        password_confirmation\n      } = data;\n      const formData = {\n        name,\n        email,\n        ...(old_password ? {\n          old_password,\n          password,\n          password_confirmation\n        } : {})\n      };\n      const {\n        data: userUpdate\n      } = await api.post(\"/profile\", formData);\n      updateUser(userUpdate);\n      history.push(\"/home\");\n    } catch (err) {\n      if (err instanceof Yup.ValidationError) {\n        var _formRef$current;\n\n        const errors = getValidationErros(err);\n        (_formRef$current = formRef.current) === null || _formRef$current === void 0 ? void 0 : _formRef$current.setErrors(errors);\n      }\n    }\n  }, [history, updateUser]);\n  return /*#__PURE__*/_jsxDEV(S.Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Menu, {\n      userName: user.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(S.Content, {\n        children: [/*#__PURE__*/_jsxDEV(S.AvatarInput, {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: user.avatar,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"avatar\",\n            children: [/*#__PURE__*/_jsxDEV(FiCamera, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              id: \"avatar\",\n              onChange: handleAvatarChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(S.ProfileEdit, {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            initialData: {\n              name: user.name,\n              email: user.email,\n              nickname: user.nickname\n            },\n            onSubmit: handleSubmit,\n            ref: formRef,\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              name: \"name\",\n              type: \"text\",\n              placeholder: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              name: \"nickname\",\n              type: \"text\",\n              placeholder: \"Apelido\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              name: \"email\",\n              type: \"email\",\n              placeholder: \"E-mail\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              name: \"password\",\n              type: \"password\",\n              placeholder: \"Nova Senha\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              name: \"old_password\",\n              type: \"password\",\n              placeholder: \"Senha Atual \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              name: \"password_confirmation\",\n              type: \"password\",\n              placeholder: \"Confirma Senha \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                width: \"100%\"\n              },\n              type: \"submit\",\n              children: [\" \", \"Salvar\", \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Edit, \"tBqk0ffCjr8wpqn5bCrXps6qnek=\", false, function () {\n  return [useAuth, useHistory];\n});\n\n_c = Edit;\nexport default Edit;\n\nvar _c;\n\n$RefreshReg$(_c, \"Edit\");","map":{"version":3,"sources":["C:/Users/jogos/Desktop/api-post/frontend/src/pages/Edit/index.tsx"],"names":["React","useRef","api","S","useAuth","Container","Input","Button","Form","Menu","useHistory","FiCamera","useCallback","Yup","getValidationErros","Edit","user","updateUser","formRef","history","handleAvatarChange","e","data","FormData","append","target","files","userPhoto","post","handleSubmit","schema","object","shape","name","string","required","nickname","email","old_password","password","when","is","val","length","then","otherwise","password_confirmation","oneOf","ref","validate","abortEarly","formData","userUpdate","push","err","ValidationError","errors","current","setErrors","avatar","width"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, ChangeEvent, useRef } from \"react\";\nimport api from \"../../services/api\";\nimport * as S from \"./styled\";\nimport { useAuth } from \"../../hooks/AuthContext\";\nimport { Container } from \"../../components/Container\";\nimport Input from \"../../components/Input\";\nimport Button from \"../../components/Button\";\nimport { Form } from \"@unform/web\";\nimport Menu from \"../../components/Menu\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { FiCamera } from \"react-icons/fi\";\nimport { useCallback } from \"react\";\nimport { FormHandles } from \"@unform/core\";\nimport * as Yup from \"yup\";\nimport getValidationErros from \"../../utils/getValidationErros\";\n\ntype ProfileFormData = {\n  name: string;\n  email: string;\n  old_password: string;\n  password: string;\n  password_confirmation: string;\n};\n\nconst Edit: React.FC = () => {\n  const { user, updateUser } = useAuth();\n  const formRef = useRef<FormHandles>(null);\n  const history = useHistory();\n\n  const handleAvatarChange = useCallback(\n    async (e: ChangeEvent<HTMLInputElement>) => {\n      const data = new FormData();\n      data.append(\"avatar\", e.target.files[0]);\n      const { data: userPhoto } = await api.post(\"users/avatar\", data);\n      updateUser(userPhoto);\n    },\n    [updateUser]\n  );\n\n  /*\n    api\n        .put(\"users/avatar\", data)\n        .then((response) => {\n          updateUser(response.data);\n        })\n        .catch((e) => console.log(e));\n  */\n\n  const handleSubmit = useCallback(\n    async (data: ProfileFormData) => {\n      try {\n        const schema = Yup.object().shape({\n          name: Yup.string().required(\"Nome Obrigatorio\"),\n          nickname: Yup.string().required(\"Apelido Obrigatorio\"),\n          email: Yup.string().required().email(\"Digite um E-mail Valido\"),\n          old_password: Yup.string(),\n          password: Yup.string().when(\"old_password\", {\n            is: (val) => !!val.length,\n            then: Yup.string().required(\"Campo Obrigatorio\"),\n            otherwise: Yup.string(),\n          }),\n          password_confirmation: Yup.string()\n            .when(\"old_password\", {\n              is: (val) => !!val.length,\n              then: Yup.string().required(\"Campo Obrigatorio\"),\n              otherwise: Yup.string(),\n            })\n            .oneOf([Yup.ref(\"password\"), null], \"Senhas est√£o diferentes\"),\n        });\n\n        await schema.validate(data, {\n          abortEarly: false,\n        });\n        const {\n          name,\n          email,\n          password,\n          old_password,\n          password_confirmation,\n        } = data;\n\n        const formData = {\n          name,\n          email,\n          ...(old_password\n            ? { old_password, password, password_confirmation }\n            : {}),\n        };\n        const { data: userUpdate } = await api.post(\"/profile\", formData);\n        updateUser(userUpdate);\n\n        history.push(\"/home\");\n      } catch (err) {\n        if (err instanceof Yup.ValidationError) {\n          const errors = getValidationErros(err);\n          formRef.current?.setErrors(errors);\n        }\n      }\n    },\n    [history, updateUser]\n  );\n\n  return (\n    <S.Wrapper>\n      <Menu userName={user.name} />\n      <Container>\n        <S.Content>\n          <S.AvatarInput>\n            <img src={user.avatar} alt=\"\" />\n            <label htmlFor=\"avatar\">\n              <FiCamera />\n              <input type=\"file\" id=\"avatar\" onChange={handleAvatarChange} />\n            </label>\n          </S.AvatarInput>\n          <S.ProfileEdit>\n            <Form\n              initialData={{\n                name: user.name,\n                email: user.email,\n                nickname: user.nickname,\n              }}\n              onSubmit={handleSubmit}\n              ref={formRef}\n            >\n              <Input name=\"name\" type=\"text\" placeholder=\"Name\" />\n              <Input name=\"nickname\" type=\"text\" placeholder=\"Apelido\" />\n              <Input name=\"email\" type=\"email\" placeholder=\"E-mail\" />\n              <Input name=\"password\" type=\"password\" placeholder=\"Nova Senha\" />\n              <Input\n                name=\"old_password\"\n                type=\"password\"\n                placeholder=\"Senha Atual \"\n              />\n              <Input\n                name=\"password_confirmation\"\n                type=\"password\"\n                placeholder=\"Confirma Senha \"\n              />\n              <Button style={{ width: \"100%\" }} type=\"submit\">\n                {\" \"}\n                Salvar{\" \"}\n              </Button>\n            </Form>\n          </S.ProfileEdit>\n        </S.Content>\n      </Container>\n    </S.Wrapper>\n  );\n};\n\nexport default Edit;\n"]},"metadata":{},"sourceType":"module"}